generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  reports   Report[]
  insights  WeeklyInsight[]
  chatSessions ChatSession[] // Added relation to ChatSession
}

model Report {
  id        String   @id @default(cuid())
  userId    String
  type      String
  fileName  String
  filePath  String
  parsedData String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model WeeklyInsight {
  id                    String   @id @default(cuid())
  userId                String
  weekNumber            Int
  year                  Int
  cardiovascularScore   Float?
  metabolicScore        Float?
  inflammationScore     Float?
  recommendations       String?
  generatedAt           DateTime @default(now())
  user                  User     @relation(fields: [userId], references: [id])
}

// New Models for Chat Functionality
model ChatSession {
  id        String      @id @default(cuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  title     String?     // Optional title for the chat session
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  messages  ChatMessage[]
}

model ChatMessage {
  id            String      @id @default(cuid())
  chatSessionId String
  chatSession   ChatSession @relation(fields: [chatSessionId], references: [id], onDelete: Cascade)
  
  role          String      @default("USER") // Changed from MessageRole to String
  content       String      // Actual message content, potentially PHI
  
  llmProvider   String?     // e.g., "openai", "anthropic"
  llmModel      String?     // e.g., "gpt-4o", "claude-3-opus"
  
  createdAt     DateTime    @default(now())
}

