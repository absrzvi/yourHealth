{"numFailedTestSuites":1,"numFailedTests":2,"numPassedTestSuites":0,"numPassedTests":9,"numPendingTestSuites":0,"numPendingTests":0,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":1,"numTotalTests":11,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1749114041061,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":5,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBeDefined (C:\\Users\\AbbasRizvi\\CascadeProjects\\for-your-health-mvp\\lib\\claims\\eligibility\\__tests__\\default.parser.test.ts:113:34)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"DefaultEligibilityParser parse should parse a complete eligibility response","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"failed","title":"should parse a complete eligibility response"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":2,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle string dates","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle string dates"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":1,"failureDetails":[{"matcherResult":{"message":"\u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m","pass":false}}],"failureMessages":["Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31mundefined\u001b[39m\n    at Object.toBeDefined (C:\\Users\\AbbasRizvi\\CascadeProjects\\for-your-health-mvp\\lib\\claims\\eligibility\\__tests__\\default.parser.test.ts:155:27)\n    at processTicksAndRejections (node:internal/process/task_queues:95:5)"],"fullName":"DefaultEligibilityParser parse should handle missing optional fields","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"status":"failed","title":"should handle missing optional fields"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle JSON string input","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle JSON string input"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":3,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle error responses","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle error responses"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle invalid JSON string input","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should handle invalid JSON string input"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle null or undefined input","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"status":"passed","title":"should handle null or undefined input"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":0,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle missing required fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"status":"passed","title":"should handle missing required fields"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle different date formats","invocations":1,"location":null,"numPassingAsserts":10,"retryReasons":[],"status":"passed","title":"should handle different date formats"},{"ancestorTitles":["DefaultEligibilityParser","parse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser parse should handle partial coverage information","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"status":"passed","title":"should handle partial coverage information"},{"ancestorTitles":["DefaultEligibilityParser","canParse"],"duration":1,"failureDetails":[],"failureMessages":[],"fullName":"DefaultEligibilityParser canParse should always return true","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"status":"passed","title":"should always return true"}],"endTime":1749114041980,"message":"\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDefaultEligibilityParser › parse › should parse a complete eligibility response\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 111 |\u001b[39m       })\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 112 |\u001b[39m       \u001b[90m// Check rawResponse first since it might be needed for debugging\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 113 |\u001b[39m       expect(result\u001b[33m.\u001b[39mrawResponse)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                                  \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 114 |\u001b[39m       \u001b[22m\n\u001b[2m     \u001b[90m 115 |\u001b[39m       \u001b[90m// Use toMatchObject to allow additional fields in the plan object\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 116 |\u001b[39m       expect(result\u001b[33m.\u001b[39mplan)\u001b[33m.\u001b[39mtoMatchObject({\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeDefined (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlib/claims/eligibility/__tests__/default.parser.test.ts\u001b[39m\u001b[0m\u001b[2m:113:34)\u001b[22m\u001b[2m\u001b[22m\n\n\u001b[1m\u001b[31m  \u001b[1m● \u001b[22m\u001b[1mDefaultEligibilityParser › parse › should handle missing optional fields\u001b[39m\u001b[22m\n\n    \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeDefined\u001b[2m()\u001b[22m\n\n    Received: \u001b[31mundefined\u001b[39m\n\u001b[2m\u001b[22m\n\u001b[2m    \u001b[0m \u001b[90m 153 |\u001b[39m       expect(result\u001b[33m.\u001b[39mcoverage)\u001b[33m.\u001b[39mtoBeUndefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 154 |\u001b[39m       \u001b[90m// Check if plan exists and has expected fields\u001b[39m\u001b[22m\n\u001b[2m    \u001b[31m\u001b[1m>\u001b[22m\u001b[2m\u001b[39m\u001b[90m 155 |\u001b[39m       expect(result\u001b[33m.\u001b[39mplan)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m     |\u001b[39m                           \u001b[31m\u001b[1m^\u001b[22m\u001b[2m\u001b[39m\u001b[22m\n\u001b[2m     \u001b[90m 156 |\u001b[39m       \u001b[36mif\u001b[39m (result\u001b[33m.\u001b[39mplan) {\u001b[22m\n\u001b[2m     \u001b[90m 157 |\u001b[39m         expect(result\u001b[33m.\u001b[39mplan)\u001b[33m.\u001b[39mtoMatchObject({\u001b[22m\n\u001b[2m     \u001b[90m 158 |\u001b[39m           type\u001b[33m:\u001b[39m \u001b[32m'PPO'\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\u001b[22m\n\u001b[2m\u001b[22m\n\u001b[2m      \u001b[2mat Object.toBeDefined (\u001b[22m\u001b[2m\u001b[0m\u001b[36mlib/claims/eligibility/__tests__/default.parser.test.ts\u001b[39m\u001b[0m\u001b[2m:155:27)\u001b[22m\u001b[2m\u001b[22m\n","name":"C:\\Users\\AbbasRizvi\\CascadeProjects\\for-your-health-mvp\\lib\\claims\\eligibility\\__tests__\\default.parser.test.ts","startTime":1749114041522,"status":"failed","summary":""}],"wasInterrupted":false}
